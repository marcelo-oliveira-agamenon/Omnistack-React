{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\marce\\\\Documents\\\\Onmistack\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\Documents\\\\Onmistack\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from \"../../services/api\";\nimport socketio from \"socket.io-client\";\nimport \"../dashboard/styles.css\";\nimport { Link } from \"react-router-dom\";\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spot = _useState2[0],\n        setSpot = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        request = _useState4[0],\n        setRequest = _useState4[1];\n\n  const user_id = localStorage.getItem(\"user\");\n  const socket = useMemo(() => socketio(\"http://localhost:3333\", {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on(\"booking_request\", data => {\n      setRequest([...request, data]);\n    });\n  }, [request, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem(\"user\");\n      const response = await api.get(\"/dashboard\", {\n        headers: {\n          user_id\n        }\n      });\n      setSpot(response.data);\n    }\n\n    loadSpots();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, request.map(req => {\n    React.createElement(\"li\", {\n      key: req._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, req.user.email), \" est\\xE1 solicitando uma reserva em\", \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, req.spot.company), \" para a data:\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, req.date)), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"ACEITAR\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"RECUSAR\"));\n  })), React.createElement(\"ul\", {\n    className: \"spot-List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, spot.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : \"GRATUITO\")))), React.createElement(Link, {\n    to: \"/New\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnEntrar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["C:/Users/marce/Documents/Onmistack/frontend/src/pages/dashboard/index.js"],"names":["React","useEffect","useState","useMemo","api","socketio","Link","Dashboard","spot","setSpot","request","setRequest","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","map","req","_id","user","email","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport socketio from \"socket.io-client\";\r\nimport \"../dashboard/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Dashboard() {\r\n  const [spot, setSpot] = useState([]);\r\n  const [request, setRequest] = useState([]);\r\n\r\n  const user_id = localStorage.getItem(\"user\");\r\n  const socket = useMemo(\r\n    () =>\r\n      socketio(\"http://localhost:3333\", {\r\n        query: { user_id }\r\n      }),\r\n    [user_id]\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket.on(\"booking_request\", data => {\r\n      setRequest([...request, data]);\r\n    });\r\n  }, [request, socket]);\r\n\r\n  useEffect(() => {\r\n    async function loadSpots() {\r\n      const user_id = localStorage.getItem(\"user\");\r\n      const response = await api.get(\"/dashboard\", {\r\n        headers: { user_id }\r\n      });\r\n\r\n      setSpot(response.data);\r\n    }\r\n\r\n    loadSpots();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"notifications\">\r\n        {request.map(req => {\r\n          <li key={req._id}>\r\n            <p>\r\n              <strong>{req.user.email}</strong> est√° solicitando uma reserva em{\" \"}\r\n              <strong>{req.spot.company}</strong> para a data:\r\n              <strong>{req.date}</strong>\r\n            </p>\r\n            <button>ACEITAR</button>\r\n            <button>RECUSAR</button>\r\n          </li>;\r\n        })}\r\n      </ul>\r\n      <ul className=\"spot-List\">\r\n        {spot.map(spot => (\r\n          <li key={spot._id}>\r\n            <header style={{ backgroundImage: `url(${spot.thumbnail_url})` }} />\r\n            <strong>{spot.company}</strong>\r\n            <span>{spot.price ? `R$${spot.price}/dia` : \"GRATUITO\"}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Link to=\"/New\">\r\n        <button className=\"btnEntrar\">Cadastrar novo spot</button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}