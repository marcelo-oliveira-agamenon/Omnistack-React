{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\marce\\\\Documents\\\\Onmistack\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\Documents\\\\Onmistack\\\\frontend\\\\src\\\\pages\\\\New\\\\index.js\";\nimport React, { useState, useMemo } from 'react';\nimport camera from \"../../assets/camera.svg\";\nimport '../New/styles.css';\nexport default function New() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        thumbnail = _useState2[0],\n        setThumbnail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        company = _useState4[0],\n        setCompany = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        techs = _useState6[0],\n        setTechs = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        price = _useState8[0],\n        setPrice = _useState8[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  function handleSubmit() {}\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"camera Select img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"EMPRESA *\"), React.createElement(\"input\", {\n    id: \"company\",\n    placeholder: \"Sua Empresa Incr\\xEDvel\",\n    value: company,\n    onChange: event => setCompany(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"TECNOLOGIAS * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"(separadas por v\\xEDrgulas)\")), React.createElement(\"input\", {\n    id: \"techs\",\n    placeholder: \"Quais tecnologias usam?\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"VALOR DA DI\\xC1RIA * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"(caso gratuito, em branco)\")), React.createElement(\"input\", {\n    id: \"price\",\n    placeholder: \"Valor cobrado por dia\",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btnEntrar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Cadastrar\"));\n}","map":{"version":3,"sources":["C:/Users/marce/Documents/Onmistack/frontend/src/pages/New/index.js"],"names":["React","useState","useMemo","New","thumbnail","setThumbnail","company","setCompany","techs","setTechs","price","setPrice","preview","URL","createObjectURL","handleSubmit","backgroundImage","event","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport camera from '../../assets/camera.svg';\r\nimport '../New/styles.css';\r\n\r\nexport default function New() {\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [company, setCompany] = useState('');\r\n    const [techs, setTechs] = useState('');\r\n    const [price, setPrice] = useState('');\r\n\r\n    const preview = useMemo(\r\n        () => {\r\n            return thumbnail ? URL.createObjectURL(thumbnail) : null;\r\n        },\r\n        [thumbnail]\r\n    )\r\n    \r\n    function handleSubmit() {\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label \r\n                id=\"thumbnail\" \r\n                style={{ backgroundImage: `url(${preview})` }}\r\n                className={ thumbnail ? 'has-thumbnail' : '' }\r\n            >\r\n                <input type=\"file\" onChange={event => setThumbnail(event.target.files[0])}/>\r\n                <img src={camera} alt=\"camera Select img\"/>\r\n            </label>\r\n\r\n            <label htmlFor=\"company\">EMPRESA *</label>\r\n            <input \r\n                id=\"company\"\r\n                placeholder=\"Sua Empresa Incrível\"\r\n                value={company}\r\n                onChange={event => setCompany(event.target.value)}\r\n            />\r\n            \r\n            <label htmlFor=\"techs\">TECNOLOGIAS * <span>(separadas por vírgulas)</span></label>\r\n            <input \r\n                id=\"techs\"\r\n                placeholder=\"Quais tecnologias usam?\"\r\n                value={techs}\r\n                onChange={event => setTechs(event.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"price\">VALOR DA DIÁRIA * <span>(caso gratuito, em branco)</span></label>\r\n            <input \r\n                id=\"price\"\r\n                placeholder=\"Valor cobrado por dia\"\r\n                value={price}\r\n                onChange={event => setPrice(event.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btnEntrar\">Cadastrar</button>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}